{"version":3,"sources":["constants/todo.constants.js","reducers/todo.reducer.js","reducers/index.js","helpers/store.js","components/Todos/AddTodoForm/index.js","components/Todos/TodoItem/index.js","components/Todos/TodoList/index.js","actions/todo.js","containers/todos/index.js","routes/index.js","containers/root/index.js","containers/app/index.js","index.js"],"names":["todoConstants","initialState","todos","combineReducers","todo","state","action","type","Object","assign","concat","payload","map","id","completed","filter","reduxPersistConfig","key","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","AddTodoForm","onFormSubmit","Form","useForm","form","onFinish","todoName","name","resetFields","layout","className","gutter","xs","sm","md","lg","xl","Item","rules","required","message","placeholder","htmlType","block","PlusCircleFilled","TodoItem","onTodoRemoval","onTodoToggle","actions","title","onClick","defaultChecked","onChange","color","TodoList","locale","emptyText","dataSource","renderItem","pagination","todoActions","addTodo","Math","round","random","toString","dispatch","toast","success","removeTodo","error","removeTodoSuccess","toggleTodo","info","toggleTodoSuccess","connect","bindActionCreators","justify","align","span","routes","path","exact","component","TodosContainer","Root","children","position","autoClose","hideProgressBar","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","App","storePersistor","loading","target","document","getElementById","render"],"mappings":"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","file":"static/js/main.f78a9b6c.chunk.js","sourcesContent":["export const todoConstants = {\n  ADD_TODO_SUCCESS: \"ADD_TODO_SUCCESS\",\n  TOGGLE_TODO_SUCCESS: \"TOGGLE_TODO_SUCCESS\",\n  REMOVE_TODO_SUCCESS: \"REMOVE_TODO_SUCCESS\"\n};\n","import { todoConstants } from \"../constants\";\n\nconst initialState = {\n  todos: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case todoConstants.ADD_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.concat(action.payload)\n      });\n    case todoConstants.TOGGLE_TODO_SUCCESS:\n      return Object.assign({}, state, {\n        todos: state.todos.map(todo =>\n          todo.id === action.payload\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )\n      });\n    case todoConstants.REMOVE_TODO_SUCCESS:\n      return {\n        todos: state.todos.filter(todo => todo.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport todo from \"./todo.reducer\";\n\nexport default combineReducers({\n  todo\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nimport rootReducer from \"../reducers\";\n\nconst reduxPersistConfig = {\n  key: \"application\",\n  storage: storage,\n  stateReconciler: autoMergeLevel2\n};\n\nconst pReducer = persistReducer(reduxPersistConfig, rootReducer);\n\nexport const store = createStore(pReducer, applyMiddleware(thunk));\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport { Form, Row, Col, Button, Input } from \"antd\";\nimport { PlusCircleFilled } from \"@ant-design/icons\";\n\nimport \"./styles.scss\";\n\nconst AddTodoForm = ({ onFormSubmit }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = ({ name: todoName }) => {\n    onFormSubmit(todoName);\n\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      form={form}\n      onFinish={onFinish}\n      layout=\"horizontal\"\n      className=\"todo-form\"\n    >\n      <Row gutter={20}>\n        <Col xs={24} sm={24} md={17} lg={19} xl={20}>\n          <Form.Item\n            name={\"name\"}\n            rules={[{ required: true, message: \"This field is required\" }]}\n          >\n            <Input placeholder=\"What needs to be done?\" />\n          </Form.Item>\n        </Col>\n        <Col xs={24} sm={24} md={7} lg={5} xl={4}>\n          <Button type=\"primary\" htmlType=\"submit\" block>\n            <PlusCircleFilled />\n            Add\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default AddTodoForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Checkbox, Tooltip, Tag, List, Button } from \"antd\";\n\nimport \"./styles.scss\";\n\nconst TodoItem = ({ todo, onTodoRemoval, onTodoToggle }) => {\n  return (\n    <List.Item\n      actions={[\n        <Tooltip title=\"Remove Todo\">\n          <Button\n            className=\"remove-todo-button\"\n            type=\"danger\"\n            onClick={() => onTodoRemoval(todo.id)}\n          >\n            X\n          </Button>\n        </Tooltip>\n      ]}\n      className=\"list-item\"\n      key={todo.id}\n    >\n      <div className=\"todo-item\">\n        <Tooltip\n          title={todo.completed ? \"Mark as uncompleted\" : \"Mark as completed\"}\n        >\n          <Checkbox\n            defaultChecked={todo.completed}\n            onChange={() => onTodoToggle(todo.id)}\n          />\n        </Tooltip>\n\n        <Tag color={todo.completed ? \"green\" : \"volcano\"} className=\"todo-tag\">\n          {todo.name}\n        </Tag>\n      </div>\n    </List.Item>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  onTodoRemoval: PropTypes.func.isRequired,\n  onTodoToggle: PropTypes.func.isRequired\n};\n\nexport default TodoItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { List } from \"antd\";\n\nimport TodoItem from \"../TodoItem\";\n\nconst TodoList = ({ todos, onTodoRemoval, onTodoToggle }) => (\n  <List\n    locale={{\n      emptyText: \"There's nothing to do :(\"\n    }}\n    dataSource={todos}\n    renderItem={todo => (\n      <TodoItem\n        todo={todo}\n        onTodoToggle={onTodoToggle}\n        onTodoRemoval={onTodoRemoval}\n      />\n    )}\n    pagination={10}\n  />\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  onTodoToggle: PropTypes.func.isRequired,\n  onTodoRemoval: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import { todoConstants } from \"../constants\";\nimport { toast } from \"react-toastify\";\n\nconst addTodoSuccess = todo => dispatch => {\n  dispatch({\n    type: todoConstants.ADD_TODO_SUCCESS,\n    payload: todo\n  });\n\n  toast.success(\"Todo added!\");\n};\n\nconst toggleTodoSuccess = id => dispatch => {\n  dispatch({\n    type: todoConstants.TOGGLE_TODO_SUCCESS,\n    payload: id\n  });\n\n  toast.info(\"Todo state updated!\");\n};\n\nconst removeTodoSuccess = id => dispatch => {\n  dispatch({\n    type: todoConstants.REMOVE_TODO_SUCCESS,\n    payload: id\n  });\n  toast.error(\"Todo removed!\");\n};\n\nconst addTodo = name =>\n  addTodoSuccess({\n    id: Math.round(Math.random() * 36 ** 12).toString(36),\n    name: name,\n    completed: false\n  });\n\nconst toggleTodo = id => toggleTodoSuccess(id);\n\nconst removeTodo = id => removeTodoSuccess(id);\n\nexport const todoActions = {\n  addTodo,\n  removeTodo,\n  toggleTodo\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Row, Col, Card } from \"antd\";\n\nimport AddTodoForm from \"../../components/Todos/AddTodoForm\";\nimport TodoList from \"../../components/Todos/TodoList\";\n\nimport { todoActions } from \"../../actions\";\n\nconst TodosContainer = ({ todos, addTodo, removeTodo, toggleTodo }) => {\n  const handleformSubmit = todo => addTodo(todo);\n\n  const handleTodoRemoval = todo => removeTodo(todo);\n\n  const handleTodoToggle = todo => toggleTodo(todo);\n\n  return (\n    <Row type=\"flex\" justify=\"center\" align=\"middle\">\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 23 }}\n        md={{ span: 21 }}\n        lg={{ span: 20 }}\n        xl={{ span: 18 }}\n      >\n        <AddTodoForm onFormSubmit={handleformSubmit} />\n\n        <Card title=\"Todo List\">\n          <TodoList\n            todos={todos}\n            onTodoToggle={handleTodoToggle}\n            onTodoRemoval={handleTodoRemoval}\n          />\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nTodosContainer.propTypes = {\n  todos: PropTypes.array.isRequired,\n  addTodo: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todo.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addTodo: todoActions.addTodo,\n      removeTodo: todoActions.removeTodo,\n      toggleTodo: todoActions.toggleTodo\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodosContainer);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport TodosContainer from \"../containers/todos\";\n\nconst routes = () => (\n  <Switch>\n    <Route path=\"/\" exact={true} component={TodosContainer} />\n  </Switch>\n);\n\nexport default routes;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst Root = ({ children }) => (\n  <>\n    {children}\n    <ToastContainer\n      position=\"bottom-left\"\n      autoClose={2000}\n      hideProgressBar={false}\n      closeOnClick\n      rtl={false}\n      pauseOnVisibilityChange\n      draggable\n      pauseOnHover={false}\n    />\n  </>\n);\n\nexport default Root;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Routes from \"../../routes\";\n\nimport RootContainer from \"../root\";\n\nconst App = ({ store, storePersistor }) => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading...</div>} persistor={storePersistor}>\n        <RootContainer>\n          <HashRouter>\n            <Routes />\n          </HashRouter>\n        </RootContainer>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n  storePersistor: PropTypes.object.isRequired\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { store, persistor } from \"./helpers\";\n\nimport \"antd/dist/antd.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./global.scss\";\n\nimport App from \"./containers/app\";\n\nconst target = document.getElementById(\"root\");\n\nrender(<App store={store} storePersistor={persistor} />, target);\n"],"sourceRoot":""}